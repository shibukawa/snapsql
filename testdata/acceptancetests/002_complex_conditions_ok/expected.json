{
  "cel_environments": [
    {
      "index": 0,
      "additional_variables": [
    {"name": "min_age", "type": "int", "value": 1},
    {"name": "max_age", "type": "int", "value": 1},
        {
          "name": "departments",
          "type": "string[]",
          "value": [
            "dummy"
          ]
        },
        {
          "name": "active",
          "type": "bool",
          "value": true
        }
      ],
      "container": "root"
    },
    {
      "index": 1,
      "additional_variables": [
        {"name": "__item", "type": "any", "value": "dummy"}
      ],
      "container": "loop_1",
      "parent_index": 0
    }
  ],
  "cel_expressions": [
    {
      "id": "expr_001",
      "expression": "min_age \u003e 0",
      "environment_index": 0,
      "position": {
        "line": 13,
        "column": 1
      },
      "type_descriptor": "bool",
      "result_type": 1
    },
    {
      "id": "expr_002",
      "expression": "min_age",
      "environment_index": 0,
      "position": {
        "line": 14,
        "column": 12
      },
      "type_descriptor": "int",
      "result_type": 1
    },
    {
      "id": "expr_003",
      "expression": "max_age \u003e 0",
      "environment_index": 0,
      "position": {
        "line": 16,
        "column": 1
      },
      "type_descriptor": "bool",
      "result_type": 1
    },
    {
      "id": "expr_004",
      "expression": "max_age",
      "environment_index": 0,
      "position": {
        "line": 17,
        "column": 12
      },
      "type_descriptor": "int",
      "result_type": 1
    },
    {
      "id": "expr_005",
      "expression": "departments.size() \u003e 0",
      "environment_index": 0,
      "position": {
        "line": 19,
        "column": 1
      },
      "type_descriptor": "bool",
      "result_type": 1
    },
    {
      "id": "expr_006",
      "expression": "departments",
      "environment_index": 0,
      "position": {
        "line": 20,
        "column": 38
      },
      "type_descriptor": [
        "string"
      ],
      "result_type": 2
    },
    {
      "id": "expr_007",
      "expression": "active",
      "environment_index": 0,
      "position": {
        "line": 22,
        "column": 1
      },
      "type_descriptor": "bool",
      "result_type": 1
    }
  ],
  "envs": [
    [],
    [
      {
        "name": "__item",
        "type": "any"
      }
    ]
  ],
  "format_version": "1",
  "function_name": "getFilteredData",
  "instructions": [
    {"op": "EMIT_STATIC", "pos": "10:1", "value": "SELECT id, name, age, department FROM users WHERE 1=1 "},
    {"op": "IF", "pos": "13:1", "expr_index": 0},
    {"op": "EMIT_STATIC", "pos": "14:0", "value": " AND age \u003e= "},
    {"op": "EMIT_EVAL", "pos": "14:12", "expr_index": 1},
    {"op": "EMIT_STATIC", "pos": "15:0", "value": " "},
    {"op": "END", "pos": "15:1"},
    {"op": "EMIT_STATIC", "pos": "16:0", "value": " "},
    {"op": "IF", "pos": "16:1", "expr_index": 2},
    {"op": "EMIT_STATIC", "pos": "17:0", "value": " AND age \u003c= "},
    {"op": "EMIT_EVAL", "pos": "17:12", "expr_index": 3},
    {"op": "EMIT_STATIC", "pos": "18:0", "value": " "},
    {"op": "END", "pos": "18:1"},
    {"op": "EMIT_STATIC", "pos": "19:0", "value": " "},
    {"op": "IF", "pos": "19:1", "expr_index": 4},
    {"op": "EMIT_STATIC", "pos": "20:0", "value": " AND department IN ("},
    {"op": "EMIT_EVAL", "pos": "20:20", "expr_index": 5},
    {
      "op": "LOOP_START",
      "pos": "20:38",
      "variable": "__item",
      "collection_expr_index": 5,
      "env_index": 1
    },
    {"op": "EMIT_STATIC", "pos": "20:38", "value": "('HR', 'Engineering')"},
    {"op": "LOOP_END", "pos": "20:58", "env_index": 0},
    {"op": "EMIT_STATIC", "pos": "20:59", "value": ") "},
    {"op": "END", "pos": "21:1"},
    {"op": "EMIT_STATIC", "pos": "22:0", "value": " "},
    {"op": "IF", "pos": "22:1", "expr_index": 6},
    {"op": "EMIT_STATIC", "pos": "23:0", "value": " AND status = 'active' "},
    {"op": "END", "pos": "24:1"},
    {"op": "EMIT_STATIC", "pos": "25:0", "value": " "},
    {"op": "IF_SYSTEM_LIMIT"},
    {"op": "EMIT_STATIC", "value": " LIMIT "},
    {"op": "EMIT_SYSTEM_LIMIT"},
    {"op": "END"},
    {"op": "IF_SYSTEM_OFFSET"},
    {"op": "EMIT_STATIC", "value": " OFFSET "},
    {"op": "EMIT_SYSTEM_OFFSET"},
    {"op": "END"},
    {"op": "EMIT_SYSTEM_FOR"}
  ],
  "parameters": [
    {"name": "min_age", "type": "int"},
    {"name": "max_age", "type": "int"},
    {
      "name": "departments",
      "type": "string[]"
    },
    {"name": "active", "type": "bool"}
  ],
  "response_affinity": "many",
  "responses": [
    {"name": "id", "type": "any", "is_nullable": true, "hierarchy_key_level": 1},
    {"name": "name", "type": "any", "is_nullable": true},
    {"name": "age", "type": "any", "is_nullable": true},
    {"name": "department", "type": "any", "is_nullable": true}
  ],
  "table_references": [
    {"name": "users", "context": "main"}
  ],
  "warnings": [
    "type inference failed: no database schema provided",
    "type inference unavailable: generated fallback responses with any type"
  ]
}